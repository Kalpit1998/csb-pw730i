{"version":3,"sources":["redux/actionType.js","redux/reducer.js","redux/root-reducer.js","redux/store.js","components/TodoInput.jsx","components/Todo.jsx","components/TodoList.jsx","redux/action.js","App.jsx","index.js"],"names":["COMPLETE_TODO","ADD_TODO","REMOVE_TODO","UPDATE_TODO","init_state","todos","rootReducer","combineReducers","state","action","type","filterTodo","filter","t","id","payload","updatedTodos","map","todo","task","updatedTask","newTodo","uuidv4","completed","addedTodo","toggleTodos","complete","store","createStore","compose","applyMiddleware","window","__REDUX_DEVTOOLS_EXTENSION__","TodoInput","createTodo","useState","setTask","className","onSubmit","e","preventDefault","placeholder","name","value","onChange","target","Todo","toggleTodo","removeTodo","updateTodo","isEditing","setIsEditing","editTask","setEditTask","TransitionGroup","CSSTransition","timeout","classNames","onClick","TodoList","useSelector","dispatch","useDispatch","update","completeTodo","App","rootElement","document","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.2700db5c.chunk.js","sourcesContent":["export const COMPLETE_TODO = \"COMPLETE_TODO\";\r\nexport const ADD_TODO = \"ADD_TODO\";\r\nexport const REMOVE_TODO = \"REMOVE_TODO\";\r\nexport const UPDATE_TODO = \"UPDATE_TODO\";\r\n","import {\r\n  ADD_TODO,\r\n  COMPLETE_TODO,\r\n  REMOVE_TODO,\r\n  UPDATE_TODO\r\n} from \"./actionType\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\n\r\nconst init_state = {\r\n  todos: []\r\n  // todos: [{ id: 1, task: \"wake up\", completed: false }]\r\n};\r\n\r\nexport const todoReducer = (state = init_state, action) => {\r\n  switch (action.type) {\r\n    case REMOVE_TODO:\r\n      const filterTodo = state.todos.filter((t) => t.id !== action.payload.id);\r\n      return {\r\n        ...state,\r\n        todos: filterTodo\r\n      };\r\n    case UPDATE_TODO:\r\n      const updatedTodos = state.todos.map((todo) => {\r\n        if (todo.id === action.payload.id) {\r\n          return { ...todo, task: action.payload.updatedTask };\r\n        }\r\n        return todo;\r\n      });\r\n      return {\r\n        ...state,\r\n        todos: updatedTodos\r\n      };\r\n    case ADD_TODO:\r\n      const newTodo = {\r\n        id: uuidv4(),\r\n        task: action.payload,\r\n        completed: false\r\n      };\r\n\r\n      const addedTodo = [...state.todos, newTodo];\r\n      return {\r\n        ...state,\r\n        todos: addedTodo\r\n      };\r\n    case COMPLETE_TODO:\r\n      const toggleTodos = state.todos.map((t) =>\r\n        t.id === action.payload.id\r\n          ? { ...action.payload, complete: !action.payload.complete }\r\n          : t\r\n      );\r\n      return {\r\n        ...state,\r\n        todos: toggleTodos\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { combineReducers } from \"redux\";\r\nimport { todoReducer } from \"./reducer\";\r\n\r\nexport const rootReducer = combineReducers({\r\n  todos: todoReducer\r\n});\r\n","import { applyMiddleware, compose, createStore } from \"redux\";\r\nimport logger from \"redux-logger\";\r\nimport { rootReducer } from \"./root-reducer\";\r\n\r\nconst middleware = [];\r\n\r\nif (process.env.NODE_ENV === \"development\") {\r\n  middleware.push(logger);\r\n}\r\n\r\n// export const store = createStore(rootReducer, applyMiddleware(...middleware));\r\nexport const store = createStore(\r\n  rootReducer,\r\n  compose(\r\n    applyMiddleware(...middleware),\r\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n  )\r\n);\r\n","import React, { useState } from \"react\";\r\nimport \"./TodoInput.css\";\r\n\r\nexport const TodoInput = ({ createTodo }) => {\r\n  const [task, setTask] = useState(\"\");\r\n\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n    createTodo(task);\r\n    setTask(\"\");\r\n  }\r\n  return (\r\n    <form className=\"TodoInput\" onSubmit={handleSubmit}>\r\n      <input\r\n        type=\"text\"\r\n        id=\"task\"\r\n        placeholder=\"Enter task\"\r\n        name=\"task\"\r\n        value={task}\r\n        onChange={(e) => setTask(e.target.value)}\r\n      />\r\n      <button type=\"submit\">Add Todo</button>\r\n    </form>\r\n  );\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { TransitionGroup, CSSTransition } from \"react-transition-group\";\r\nimport \"./Todo.css\";\r\n\r\nexport const Todo = ({\r\n  toggleTodo,\r\n  id,\r\n  completed,\r\n  task,\r\n  removeTodo,\r\n  updateTodo\r\n}) => {\r\n  const [isEditing, setIsEditing] = useState(false);\r\n  const [editTask, setEditTask] = useState(task);\r\n\r\n  function handleUpdate(e) {\r\n    e.preventDefault();\r\n\r\n    updateTodo(id, editTask);\r\n    setIsEditing(false);\r\n  }\r\n\r\n  return (\r\n    <TransitionGroup className={completed ? \"Todo completed\" : \"Todo\"}>\r\n      {isEditing ? (\r\n        <CSSTransition key=\"editing\" timeout={500} classNames=\"form\">\r\n          <form className=\"todo-edit-form\" onSubmit={handleUpdate}>\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Enter task\"\r\n              name=\"task\"\r\n              value={editTask}\r\n              onChange={(e) => setEditTask(e.target.value)}\r\n            />\r\n            <button type=\"submit\">Save</button>\r\n          </form>\r\n        </CSSTransition>\r\n      ) : (\r\n        <CSSTransition key=\"normal\" timeout={500} className=\"task-text\">\r\n          <li className=\"Todo-task\" onChange={toggleTodo}>\r\n            {task}\r\n          </li>\r\n        </CSSTransition>\r\n      )}\r\n\r\n      <div className=\"Todo-buttons\">\r\n        <button onClick={() => setIsEditing(true)}>\r\n          <i className=\"fas fa-pen\" />\r\n        </button>\r\n        <button onClick={removeTodo}>\r\n          <i className=\"fas fa-trash\" />\r\n        </button>\r\n      </div>\r\n    </TransitionGroup>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { TransitionGroup, CSSTransition } from \"react-transition-group\";\r\nimport { TodoInput } from \"./TodoInput\";\r\nimport { Todo } from \"./Todo\";\r\nimport \"./TodoList.css\";\r\nimport { addTodo, completeTodo, removeTodo, updateTodo } from \"../redux/action\";\r\n\r\nexport const TodoList = () => {\r\n  const state = useSelector((state) => ({ ...state.todos }));\r\n  let dispatch = useDispatch();\r\n\r\n  const create = (newTodo) => {\r\n    dispatch(addTodo(newTodo));\r\n  };\r\n\r\n  const update = (id, updatedTask) => {\r\n    dispatch(updateTodo({ id, updatedTask }));\r\n  };\r\n  // console.log(state, \"from todo list component\");\r\n  return (\r\n    <div className=\"TodoList\">\r\n      <h1>Todo App With Redux</h1>\r\n      <TodoInput createTodo={create} />\r\n      <ul>\r\n        <TransitionGroup className=\"todo=list\">\r\n          {state.todos &&\r\n            state.todos.map((todo) => {\r\n              return (\r\n                <CSSTransition key={todo.id} className=\"todo\">\r\n                  <Todo\r\n                    key={todo.id}\r\n                    id={todo.id}\r\n                    task={todo.task}\r\n                    completed={todo.completed}\r\n                    toggleTodo={() => {\r\n                      dispatch(completeTodo(todo));\r\n                    }}\r\n                    removeTodo={() => {\r\n                      dispatch(removeTodo(todo));\r\n                    }}\r\n                    updateTodo={update}\r\n                  />\r\n                </CSSTransition>\r\n              );\r\n            })}\r\n        </TransitionGroup>\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n","import {\r\n  ADD_TODO,\r\n  COMPLETE_TODO,\r\n  REMOVE_TODO,\r\n  UPDATE_TODO\r\n} from \"./actionType\";\r\n\r\nexport const completeTodo = (todo) => ({\r\n  type: COMPLETE_TODO,\r\n  payload: todo\r\n});\r\n\r\nexport const addTodo = (todo) => {\r\n  return {\r\n    type: ADD_TODO,\r\n    payload: todo\r\n  };\r\n};\r\n\r\nexport const removeTodo = (todo) => {\r\n  return {\r\n    type: REMOVE_TODO,\r\n    payload: todo\r\n  };\r\n};\r\n\r\nexport const updateTodo = (todo) => {\r\n  return {\r\n    type: UPDATE_TODO,\r\n    payload: todo\r\n  };\r\n};\r\n","// import { useSelector } from \"react-redux\";\nimport { TodoList } from \"./components/TodoList\";\nimport \"./styles.css\";\n\nexport default function App() {\n  // const state = useSelector((state) => ({ ...state }));\n  // console.log(state, \"state\");\n  return (\n    <div className=\"App\">\n      <TodoList />\n    </div>\n  );\n}\n","import { StrictMode } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { store } from \"./redux/store.js\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}